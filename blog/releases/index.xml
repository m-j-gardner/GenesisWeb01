<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CIS PE Chapter â€“ New Releases</title>
    <link>/blog/releases/</link>
    <description>Recent content in New Releases on CIS PE Chapter</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/blog/releases/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: How we got started with the CIS PE Chapter - v0.1</title>
      <link>/blog/2020/03/23/how-we-got-started-with-the-cis-pe-chapter-v0.1/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020/03/23/how-we-got-started-with-the-cis-pe-chapter-v0.1/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/blog/2020/03/23/how-we-got-started-with-the-cis-pe-chapter-v0.1/featured-background_hu9f7fbdec622838160fcf2c6ad9b3f56e_13994_640x0_resize_catmullrom_2.png" width="640" height="81"/>]]>
        
        &lt;h2 id=&#34;this-is-a-generated-static-site&#34;&gt;This is a generated static site&lt;/h2&gt;
&lt;p&gt;The first website I hand-crafted with Notepad was a static web site. Painfully static. Made slightly less painful with version control and helper bash scripts. I was an early convert to web content management systems with WYSIWYG editors such as Drupal &amp;amp; Wordpress. Until I had to run them at scale.&lt;/p&gt;
&lt;p&gt;This site is built using &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, a general-purpose website framework written in Go. Technically speaking, Hugo is a static site generator. Unlike systems that dynamically build a page with each visitor request, Hugo builds pages when you create or update your content.&lt;/p&gt;
&lt;h2 id=&#34;show-the-thing&#34;&gt;Show the thing&lt;/h2&gt;
&lt;p&gt;The content is written in markdown, stored in a git repo in Azure DevOps and published using a release pipeline.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pipeline-overview.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;steps:
- script: git submodule update --init --recursive
  displayName: &#39;Update git submodules&#39;

- script: npm install
  displayName: &#39;npm install&#39;

- script: |
    wget https://github.com/gohugoio/hugo/releases/download/v0.67.0/hugo_extended_0.67.0_Linux-64bit.deb
    sudo dpkg -i hugo_extended_0.67.0_Linux-64bit.deb
  displayName: &#39;Install Hugo&#39;

- script: |
    hugo
  displayName: &#39;Hugo build&#39;

- publish: $(System.DefaultWorkingDirectory)/public
  artifact: Public
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
  </channel>
</rss>
